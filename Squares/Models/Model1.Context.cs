//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Squares.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_9FDB6F_squaresEntities : DbContext
    {
        public DB_9FDB6F_squaresEntities()
            : base("name=DB_9FDB6F_squaresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<creation> creation { get; set; }
        public virtual DbSet<order> order { get; set; }
        public virtual DbSet<privileges> privileges { get; set; }
        public virtual DbSet<squareSet> squareSet { get; set; }
        public virtual DbSet<user> user { get; set; }
        public virtual DbSet<userRole> userRole { get; set; }
        public virtual DbSet<userRole_privileges> userRole_privileges { get; set; }
        public virtual DbSet<comment> comment { get; set; }
    
        public virtual ObjectResult<getSetByUser_Result> getSetByUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSetByUser_Result>("getSetByUser", usernameParameter);
        }
    
        public virtual int setRating(Nullable<int> squareSetID, Nullable<bool> isPositive)
        {
            var squareSetIDParameter = squareSetID.HasValue ?
                new ObjectParameter("squareSetID", squareSetID) :
                new ObjectParameter("squareSetID", typeof(int));
    
            var isPositiveParameter = isPositive.HasValue ?
                new ObjectParameter("isPositive", isPositive) :
                new ObjectParameter("isPositive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setRating", squareSetIDParameter, isPositiveParameter);
        }
    }
}
